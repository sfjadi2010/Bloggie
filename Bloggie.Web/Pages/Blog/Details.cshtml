@page "/blog/{urlHandle}"
@model Bloggie.Web.Pages.Blog.DetailsModel

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signedInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = Model.BlogPost.PageTitle ;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @Html.AntiForgeryToken()
            @if (Model.BlogPost != null)
            {
                <h1 class="mb-3">@Model.BlogPost.Heading</h1>
                
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">Author: @Model.BlogPost.Author</span>
                    <span class="text-secondary">Date Published: @Model.BlogPost.PublicationDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    <span>
                        @if (signedInManager.IsSignedIn(User))
                        {
                            @if (Model.Liked) { <a style="cursor: pointer"> <i class="bi bi-hand-thumbs-up-fill"></i> </a> }
                            else { <a id="btnLike" style="cursor: pointer"> <i class="bi bi-hand-thumbs-up"></i> </a> }
                        }
                        <span id="totalLikes">@Model.Likes</span> likes
                    </span>
                </div>
                
                <div class="mb-3">
                    <P>
                        @foreach (var Tag in Model.BlogPost.Tags)
                        {
                            <span class="badge bg-dark">@Tag.Name</span>
                        }
                    </p>
                </div>

                <img src="@Model.BlogPost.FeatureImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-details">
                    @Html.Raw(Model.BlogPost.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (signedInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <input type="hidden" asp-for="@Model.BlogPostId" />
                                <div class="mb-2">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="@Model.BlogPostComment"/>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-primary">Add Comment</button>
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (@Model.Comments != null && @Model.Comments.ToList().Count > 0)
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div>
                                            @comment.Description
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comment.UserName</span>
                                            <span class="text-secondary">@comment.CommentDate.ToShortDateString()</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    Blog post not found.
                </div>
            }
        </div>
    </div>

</div>

@section scripts {
    <script>
        $(document).ready(function () {

            const btnLike = document.getElementById('btnLike');
            const totalLikes = document.getElementById('totalLikes');

            if (btnLike === null) return;

            var token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            async function getLikes() { 
                fetch('/Blog/Details?handler=likes', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify('@Model.BlogPost.Id')
                })
                .then(response => response.json())
                .then(result => totalLikes.innerHTML = result);
            }

            btnLike.addEventListener('click', async () => {
                fetch('/Blog/Details?handler=like', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify({ blogPostId: '@Model.BlogPost.Id', userId: '@userManager.GetUserId(User)' })
                })
                .then(response => {
                    btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                    btnLike.removeEventListener('click', () => { });
                    getLikes();
                });
            });
        });
    </script>
}